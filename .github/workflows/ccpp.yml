name: C/C++ CI

on: [push]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        cfg:
          - { os: ubuntu-16.04, cpp-version: gcc-4.8 }
          - { os: ubuntu-16.04, cpp-version: gcc-5 }
          - { os: ubuntu-16.04, cpp-version: gcc-6 }
          - { os: ubuntu-16.04, cpp-version: gcc-7 }
          - { os: ubuntu-16.04, cpp-version: clang-3.9 }
          - { os: ubuntu-16.04, cpp-version: clang }
          - { os: ubuntu-18.04, cpp-version: gcc-4.8 }
          - { os: ubuntu-18.04, cpp-version: gcc-5 }
          - { os: ubuntu-18.04, cpp-version: gcc-6 }
          - { os: ubuntu-18.04, cpp-version: gcc-7 }
          - { os: ubuntu-18.04, cpp-version: clang-3.9 }
          - { os: ubuntu-18.04, cpp-version: clang }
          - { os: macOS-latest, cpp-version: xcode9.3 }
          - { os: macOS-latest, cpp-version: xcode11 }
    steps:
    - uses: actions/checkout@v2
    - name: Setup compiler
    - name: Setup compiler
      run: |
        if [ "$RUNNER_OS" == "Linux" ]; then
             apt install ${{ matrix.cpp-version }}
        elif [ "$RUNNER_OS" == "macOS" ]; then
             port install ${{ matrix.python-version }}
        else
             echo "$RUNNER_OS not supported"
             exit 1
        fi
      shell: bash
    - name: cmake
      run: cmake -DCMAKE_BUILD_TYPE=Debug -G "CodeBlocks - Unix Makefiles" "/home/runner/work/code/code"
    - name: cmake build
      run: cmake --build "." --target code -- -j 2 # this will build code and test for any compilation error

